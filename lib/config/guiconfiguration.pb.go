// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/config/guiconfiguration.proto

package config

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/syncthing/syncthing/proto/ext"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GUIConfiguration struct {
	Enabled                   bool                 `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled" xml:"enabled,attr" default:"true"`
	RawAddress                string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address" xml:"address" default:"127.0.0.1:8384"`
	RawUnixSocketPermissions  string               `protobuf:"bytes,3,opt,name=unix_socket_permissions,json=unixSocketPermissions,proto3" json:"unixSocketPermissions" xml:"unixSocketPermissions,omitempty"`
	User                      string               `protobuf:"bytes,4,opt,name=user,proto3" json:"user" xml:"user,omitempty"`
	Password                  string               `protobuf:"bytes,5,opt,name=password,proto3" json:"password" xml:"password,omitempty"`
	AuthMode                  AuthMode             `protobuf:"varint,6,opt,name=auth_mode,json=authMode,proto3,enum=config.AuthMode" json:"authMode" xml:"authMode,omitempty"`
	RawUseTLS                 bool                 `protobuf:"varint,7,opt,name=use_tls,json=useTls,proto3" json:"useTLS" xml:"tls,attr"`
	APIKey                    string               `protobuf:"bytes,8,opt,name=api_key,json=apiKey,proto3" json:"apiKey" xml:"apikey,omitempty"`
	InsecureAdminAccess       bool                 `protobuf:"varint,9,opt,name=insecure_admin_access,json=insecureAdminAccess,proto3" json:"insecureAdminAccess" xml:"insecureAdminAccess,omitempty"`
	Theme                     string               `protobuf:"bytes,10,opt,name=theme,proto3" json:"theme" xml:"theme" default:"default"`
	Debugging                 bool                 `protobuf:"varint,11,opt,name=debugging,proto3" json:"debugging" xml:"debugging,attr"`
	InsecureSkipHostCheck     bool                 `protobuf:"varint,12,opt,name=insecure_skip_host_check,json=insecureSkipHostCheck,proto3" json:"insecureSkipHostcheck" xml:"insecureSkipHostcheck,omitempty"`
	InsecureAllowFrameLoading bool                 `protobuf:"varint,13,opt,name=insecure_allow_frame_loading,json=insecureAllowFrameLoading,proto3" json:"insecureAllowFrameLoading" xml:"insecureAllowFrameLoading,omitempty"`
	SendBasicAuthPrompt       bool                 `protobuf:"varint,14,opt,name=send_basic_auth_prompt,json=sendBasicAuthPrompt,proto3" json:"sendBasicAuthPrompt" xml:"sendBasicAuthPrompt,attr"`
	WebauthnRpId              string               `protobuf:"bytes,15,opt,name=webauthn_rp_id,json=webauthnRpId,proto3" json:"webauthnRpId" xml:"webauthnRpId"`
	WebauthnOrigin            string               `protobuf:"bytes,16,opt,name=webauthn_origin,json=webauthnOrigin,proto3" json:"webauthnOrigin" xml:"webauthnOrigin"`
	WebauthnCredentials       []WebauthnCredential `protobuf:"bytes,17,rep,name=webauthn_credentials,json=webauthnCredentials,proto3" json:"webauthnCredentials" xml:"webauthnCredential"`
}

func (m *GUIConfiguration) Reset()         { *m = GUIConfiguration{} }
func (m *GUIConfiguration) String() string { return proto.CompactTextString(m) }
func (*GUIConfiguration) ProtoMessage()    {}
func (*GUIConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a9586d611855d64, []int{0}
}
func (m *GUIConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GUIConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GUIConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GUIConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GUIConfiguration.Merge(m, src)
}
func (m *GUIConfiguration) XXX_Size() int {
	return m.ProtoSize()
}
func (m *GUIConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_GUIConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_GUIConfiguration proto.InternalMessageInfo

type WebauthnCredential struct {
	ID            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id" xml:"id,attr"`
	Nickname      string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname" xml:"nickname,attr"`
	PublicKeyCose string   `protobuf:"bytes,3,opt,name=public_key_cose,json=publicKeyCose,proto3" json:"publicKeyCose" xml:"publicKeyCose,attr"`
	SignCount     uint32   `protobuf:"varint,4,opt,name=sign_count,json=signCount,proto3" json:"signCount" xml:"signCount,attr"`
	Transports    []string `protobuf:"bytes,5,rep,name=transports,proto3" json:"transports" xml:"transports,attr"`
	RequireUv     bool     `protobuf:"varint,6,opt,name=require_uv,json=requireUv,proto3" json:"requireUv" xml:"requireUv,attr"`
}

func (m *WebauthnCredential) Reset()         { *m = WebauthnCredential{} }
func (m *WebauthnCredential) String() string { return proto.CompactTextString(m) }
func (*WebauthnCredential) ProtoMessage()    {}
func (*WebauthnCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a9586d611855d64, []int{1}
}
func (m *WebauthnCredential) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebauthnCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebauthnCredential.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WebauthnCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebauthnCredential.Merge(m, src)
}
func (m *WebauthnCredential) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebauthnCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_WebauthnCredential.DiscardUnknown(m)
}

var xxx_messageInfo_WebauthnCredential proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GUIConfiguration)(nil), "config.GUIConfiguration")
	proto.RegisterType((*WebauthnCredential)(nil), "config.WebauthnCredential")
}

func init() { proto.RegisterFile("lib/config/guiconfiguration.proto", fileDescriptor_2a9586d611855d64) }

var fileDescriptor_2a9586d611855d64 = []byte{
	// 1224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x96, 0x4f, 0x6f, 0xdb, 0xb6,
	0x1b, 0xc7, 0xa3, 0x34, 0x4d, 0x62, 0xb6, 0x71, 0xf2, 0x63, 0xff, 0xfc, 0xd4, 0x62, 0x35, 0x53,
	0xd7, 0x1b, 0x52, 0xa0, 0x70, 0xdb, 0xb4, 0x5b, 0x8b, 0x60, 0x28, 0x10, 0xa7, 0xe8, 0x1a, 0xa4,
	0xc5, 0x02, 0x76, 0xd9, 0x80, 0x62, 0x80, 0x20, 0x4b, 0xac, 0x4d, 0xd8, 0x96, 0x54, 0x91, 0x6a,
	0xe2, 0xc3, 0xf6, 0x02, 0x76, 0x1a, 0xb2, 0xeb, 0x86, 0xed, 0x35, 0xec, 0xb2, 0xb7, 0xd0, 0x9d,
	0xe2, 0xd3, 0xb0, 0x13, 0x81, 0x26, 0x37, 0x1d, 0x75, 0xec, 0x69, 0x20, 0x25, 0xd1, 0x96, 0xed,
	0xac, 0xbb, 0x91, 0x9f, 0xe7, 0xfb, 0xfc, 0x21, 0xf5, 0x90, 0x14, 0xb8, 0xde, 0xa5, 0xcd, 0xdb,
	0x8e, 0xef, 0xbd, 0xa2, 0xad, 0xdb, 0xad, 0x88, 0xa6, 0xa3, 0x28, 0xb4, 0x39, 0xf5, 0xbd, 0x7a,
	0x10, 0xfa, 0xdc, 0x87, 0xf3, 0x29, 0xbc, 0x7a, 0x65, 0x44, 0x6a, 0x47, 0xbc, 0xdd, 0xf3, 0x5d,
	0x92, 0x4a, 0xae, 0x96, 0xc8, 0x01, 0x4f, 0x87, 0xd5, 0x3f, 0x57, 0xc0, 0xca, 0x17, 0x7b, 0xdb,
	0x5b, 0xa3, 0x81, 0x60, 0x13, 0x2c, 0x10, 0xcf, 0x6e, 0x76, 0x89, 0x6b, 0x1a, 0xab, 0xc6, 0xda,
	0x62, 0xe3, 0x69, 0x2c, 0x50, 0x8e, 0x12, 0x81, 0xae, 0x1f, 0xf4, 0xba, 0x1b, 0xd5, 0x6c, 0x7e,
	0xcb, 0xe6, 0x3c, 0xac, 0xae, 0xba, 0xe4, 0x95, 0x1d, 0x75, 0xf9, 0x46, 0x95, 0x87, 0x11, 0xa9,
	0xc6, 0x47, 0xb5, 0xf3, 0xa3, 0xf6, 0xf7, 0x47, 0xb5, 0x39, 0x69, 0xc0, 0x79, 0x14, 0xf8, 0x1d,
	0x58, 0xb0, 0x5d, 0x37, 0x24, 0x8c, 0x99, 0xb3, 0xab, 0xc6, 0x5a, 0xa9, 0xe1, 0x1c, 0x0b, 0x04,
	0xb0, 0xbd, 0xbf, 0x99, 0x52, 0x99, 0x31, 0x13, 0x24, 0x02, 0x7d, 0xa2, 0x32, 0x66, 0xf3, 0x91,
	0x64, 0x77, 0xd7, 0x1f, 0xd4, 0xef, 0xd4, 0xef, 0xd4, 0xef, 0x6e, 0x3c, 0xbc, 0xf7, 0xf0, 0x7e,
	0xf5, 0xfd, 0x51, 0xad, 0x5c, 0x44, 0x87, 0x83, 0xda, 0x48, 0x50, 0x9c, 0x87, 0x84, 0x7f, 0x19,
	0xe0, 0xff, 0x91, 0x47, 0x0f, 0x2c, 0xe6, 0x3b, 0x1d, 0xc2, 0xad, 0x80, 0x84, 0x3d, 0xca, 0x18,
	0xf5, 0x3d, 0x66, 0x9e, 0x51, 0xf5, 0xfc, 0x62, 0x1c, 0x0b, 0x64, 0x62, 0x7b, 0x7f, 0xcf, 0xa3,
	0x07, 0x2f, 0x94, 0x6a, 0x77, 0x28, 0x8a, 0x05, 0xba, 0x14, 0x4d, 0x33, 0x24, 0x02, 0x7d, 0xac,
	0x8a, 0x9d, 0x6a, 0xbd, 0xe5, 0xf7, 0x28, 0x27, 0xbd, 0x80, 0xf7, 0xe5, 0x16, 0xa1, 0x0f, 0x68,
	0x0e, 0x07, 0xb5, 0x53, 0x0b, 0xc0, 0xd3, 0xd3, 0xc3, 0x27, 0x60, 0x2e, 0x62, 0x24, 0x34, 0xe7,
	0xd4, 0x22, 0xd6, 0x63, 0x81, 0xd4, 0x3c, 0x11, 0xe8, 0x62, 0x5a, 0x16, 0x23, 0x61, 0xb1, 0x8a,
	0x72, 0x11, 0x61, 0xa5, 0x87, 0x2f, 0xc1, 0x62, 0x60, 0x33, 0xb6, 0xef, 0x87, 0xae, 0x79, 0x56,
	0xc5, 0x7a, 0x14, 0x0b, 0xa4, 0x59, 0x22, 0x90, 0xa9, 0xe2, 0xe5, 0xa0, 0x18, 0x13, 0x4e, 0x62,
	0xac, 0x7d, 0x61, 0x0f, 0x94, 0x64, 0x47, 0x5a, 0xb2, 0x25, 0xcd, 0xf9, 0x55, 0x63, 0xad, 0xbc,
	0xbe, 0x52, 0x4f, 0x5b, 0xb5, 0xbe, 0x19, 0xf1, 0xf6, 0x73, 0xdf, 0x25, 0x69, 0x3a, 0x3b, 0x9b,
	0xe9, 0x74, 0x39, 0x18, 0x4b, 0x37, 0x89, 0xb1, 0xf6, 0x85, 0x04, 0x2c, 0x44, 0x8c, 0x58, 0xbc,
	0xcb, 0xcc, 0x05, 0xd5, 0xce, 0xcf, 0x8e, 0x05, 0x2a, 0xc9, 0x8d, 0x65, 0xe4, 0xab, 0x67, 0x2f,
	0x62, 0x81, 0xe6, 0x23, 0x35, 0x4a, 0x04, 0x2a, 0xab, 0x2c, 0xbc, 0xcb, 0xd2, 0xb6, 0x8e, 0x8f,
	0x6a, 0x8b, 0xf9, 0x24, 0x39, 0xaa, 0x65, 0xba, 0xc3, 0x41, 0x6d, 0xe8, 0x8e, 0x15, 0xec, 0x32,
	0x99, 0xc6, 0x0e, 0xa8, 0xd5, 0x21, 0x7d, 0x73, 0x51, 0x6d, 0x98, 0x4c, 0x33, 0xbf, 0xb9, 0xbb,
	0xbd, 0x43, 0xfa, 0x32, 0x87, 0x1d, 0xd0, 0x1d, 0xd2, 0x4f, 0x04, 0xba, 0x9c, 0xae, 0x24, 0xa0,
	0x1d, 0xd2, 0x2f, 0xae, 0x63, 0x65, 0x1c, 0x1e, 0x0e, 0x6a, 0x59, 0x04, 0x9c, 0xf9, 0xc3, 0x9f,
	0x0c, 0x70, 0x89, 0x7a, 0x8c, 0x38, 0x51, 0x48, 0x2c, 0xdb, 0xed, 0x51, 0xcf, 0xb2, 0x1d, 0x47,
	0x9e, 0xa3, 0x92, 0x5a, 0x9c, 0x15, 0x0b, 0x74, 0x21, 0x17, 0x6c, 0x4a, 0xfb, 0xa6, 0x32, 0x27,
	0x02, 0xdd, 0x50, 0x89, 0xa7, 0xd8, 0x8a, 0x55, 0x5c, 0xfb, 0x57, 0x05, 0x9e, 0x16, 0x1c, 0xee,
	0x80, 0xb3, 0xbc, 0x4d, 0x7a, 0xc4, 0x04, 0x6a, 0xe9, 0x9f, 0xc6, 0x02, 0xa5, 0x20, 0x11, 0xe8,
	0x5a, 0xba, 0xa7, 0x72, 0x36, 0x72, 0x74, 0xb3, 0x81, 0x3c, 0xb3, 0x0b, 0xd9, 0x18, 0xa7, 0x2e,
	0x70, 0x0f, 0x94, 0x5c, 0xd2, 0x8c, 0x5a, 0x2d, 0xea, 0xb5, 0xcc, 0x73, 0x6a, 0x55, 0x0f, 0x62,
	0x81, 0x86, 0x50, 0x77, 0xb3, 0x26, 0xfa, 0x73, 0x95, 0x8b, 0x08, 0x0f, 0x9d, 0xe0, 0x1f, 0x06,
	0x30, 0xf5, 0xce, 0xb1, 0x0e, 0x0d, 0xac, 0xb6, 0xcf, 0xb8, 0xe5, 0xb4, 0x89, 0xd3, 0x31, 0xcf,
	0xab, 0x34, 0xdf, 0xcb, 0x73, 0x9d, 0x6b, 0x5e, 0x74, 0x68, 0xf0, 0xd4, 0x67, 0x5c, 0x09, 0xf4,
	0xb9, 0x9e, 0x6a, 0x1d, 0x3b, 0xd7, 0x1f, 0xd0, 0x24, 0x47, 0xb5, 0xe9, 0x49, 0xf0, 0x04, 0xde,
	0x92, 0x18, 0xfe, 0x6e, 0x80, 0x8f, 0x86, 0xdf, 0xbc, 0xdb, 0xf5, 0xf7, 0xad, 0x57, 0xa1, 0xdd,
	0x23, 0x56, 0xd7, 0xb7, 0x5d, 0xb9, 0x49, 0x4b, 0xaa, 0xfa, 0xd7, 0xb1, 0x40, 0x57, 0xf4, 0xd7,
	0x91, 0xb2, 0x27, 0x52, 0xf5, 0x2c, 0x15, 0x25, 0x02, 0xdd, 0x2c, 0x36, 0xc0, 0xb8, 0xa2, 0xb8,
	0x8a, 0x1b, 0xff, 0x41, 0x87, 0x4f, 0x4f, 0x07, 0x7f, 0x30, 0xc0, 0x65, 0x46, 0x3c, 0xd7, 0x6a,
	0xda, 0x8c, 0x3a, 0x96, 0x3a, 0xf1, 0x41, 0xe8, 0xf7, 0x02, 0x6e, 0x96, 0x55, 0xb9, 0x7b, 0xb2,
	0x53, 0xa5, 0xa2, 0x21, 0x05, 0xf2, 0xe0, 0xef, 0x2a, 0x73, 0x22, 0x50, 0x45, 0x15, 0x3a, 0xc5,
	0xa6, 0xbf, 0xb3, 0x79, 0x9a, 0x11, 0x4f, 0x0b, 0x09, 0xbf, 0x05, 0xe5, 0x7d, 0xd2, 0x94, 0x35,
	0x78, 0x56, 0x18, 0x58, 0xd4, 0x35, 0x97, 0x55, 0xa3, 0x7e, 0x16, 0x0b, 0x74, 0x3e, 0xb7, 0xe0,
	0x60, 0x5b, 0x5e, 0x6c, 0x50, 0x25, 0x1f, 0x85, 0xea, 0x3d, 0x1b, 0x05, 0xb8, 0x30, 0x83, 0x04,
	0x2c, 0xeb, 0xe8, 0x7e, 0x48, 0x5b, 0xd4, 0x33, 0x57, 0x54, 0xf8, 0xcf, 0x63, 0x81, 0x74, 0xe2,
	0x2f, 0x95, 0x45, 0xf7, 0x6e, 0x11, 0xab, 0xde, 0x2d, 0x22, 0x3c, 0x36, 0x87, 0x3f, 0x1b, 0xe0,
	0xa2, 0xce, 0xe3, 0x84, 0xc4, 0x25, 0x1e, 0xa7, 0x76, 0x97, 0x99, 0xff, 0x5b, 0x3d, 0xb3, 0x76,
	0x6e, 0xfd, 0x6a, 0x7e, 0x87, 0x7e, 0x93, 0x69, 0xb6, 0xb4, 0xa4, 0xf1, 0xfc, 0xad, 0x40, 0x33,
	0x72, 0xbf, 0xf7, 0x27, 0x6c, 0x4c, 0x5f, 0xae, 0x93, 0x36, 0x75, 0xb9, 0x4e, 0x62, 0x3c, 0x2d,
	0x4c, 0xf5, 0xd7, 0x39, 0x00, 0x27, 0x53, 0xc3, 0x47, 0x60, 0x96, 0xa6, 0x3f, 0x12, 0xa5, 0x46,
	0xfd, 0x58, 0xa0, 0xd9, 0xed, 0xc7, 0xb1, 0x40, 0xb3, 0x54, 0x6e, 0xf5, 0x52, 0xda, 0x90, 0xae,
	0xfe, 0xac, 0x0b, 0xd9, 0xf8, 0x70, 0x50, 0x9b, 0xdd, 0x7e, 0x8c, 0x67, 0xa9, 0x0b, 0x77, 0xc1,
	0xa2, 0x47, 0x9d, 0x8e, 0x67, 0xf7, 0x48, 0xf6, 0xab, 0x70, 0x5f, 0x3e, 0x0d, 0x39, 0x4b, 0x04,
	0xba, 0xa0, 0xa2, 0xe4, 0x40, 0xc7, 0x5a, 0x2a, 0x10, 0xac, 0x3d, 0x60, 0x07, 0x2c, 0x07, 0x51,
	0xb3, 0x4b, 0x1d, 0x79, 0x59, 0x5b, 0x8e, 0xcf, 0x48, 0xf6, 0xe6, 0x6f, 0xc5, 0x02, 0x2d, 0xa5,
	0xa6, 0x1d, 0xd2, 0xdf, 0xf2, 0xd9, 0xf0, 0xe1, 0x29, 0x50, 0x9d, 0x02, 0x4e, 0x62, 0x5c, 0x0c,
	0x00, 0xbf, 0x06, 0x80, 0xd1, 0x96, 0x67, 0x39, 0x7e, 0xe4, 0x71, 0xf5, 0x2c, 0x2f, 0xa5, 0xb7,
	0x99, 0xa4, 0x5b, 0x12, 0xea, 0x8e, 0xd0, 0x64, 0x78, 0x9b, 0x15, 0x11, 0x1e, 0x3a, 0xc1, 0x97,
	0x00, 0xf0, 0xd0, 0xf6, 0x58, 0xe0, 0x87, 0x9c, 0x99, 0x67, 0x57, 0xcf, 0xac, 0x95, 0x1a, 0x1b,
	0xb1, 0x40, 0x23, 0x34, 0x11, 0xe8, 0x52, 0x7a, 0xf7, 0x6a, 0xa4, 0x23, 0x2f, 0x8f, 0x31, 0x3c,
	0xe2, 0x27, 0x6b, 0x0e, 0xc9, 0xeb, 0x88, 0x86, 0xc4, 0x8a, 0xde, 0xa8, 0x17, 0x3a, 0xbb, 0x81,
	0x33, 0xba, 0xf7, 0x46, 0xd7, 0xac, 0xc9, 0xb0, 0xe6, 0x22, 0xc2, 0x43, 0xa7, 0xc6, 0xce, 0xdb,
	0x77, 0x95, 0x99, 0xc1, 0xbb, 0xca, 0xcc, 0xdb, 0xe3, 0x8a, 0x31, 0x38, 0xae, 0x18, 0x3f, 0x9e,
	0x54, 0x66, 0x7e, 0x3b, 0xa9, 0x18, 0x83, 0x93, 0xca, 0xcc, 0xdf, 0x27, 0x95, 0x99, 0x97, 0x37,
	0x5b, 0x94, 0xb7, 0xa3, 0x66, 0xdd, 0xf1, 0x7b, 0xb7, 0x59, 0xdf, 0x73, 0x78, 0x9b, 0x7a, 0xad,
	0x91, 0xd1, 0xf0, 0xa7, 0xb6, 0x39, 0xaf, 0xfe, 0x60, 0xef, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x14, 0xd6, 0xfe, 0x90, 0x14, 0x0b, 0x00, 0x00,
}

func (m *GUIConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GUIConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GUIConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.WebauthnCredentials) > 0 {
		for iNdEx := len(m.WebauthnCredentials) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.WebauthnCredentials[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGuiconfiguration(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
	}
	if len(m.WebauthnOrigin) > 0 {
		i -= len(m.WebauthnOrigin)
		copy(dAtA[i:], m.WebauthnOrigin)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.WebauthnOrigin)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.WebauthnRpId) > 0 {
		i -= len(m.WebauthnRpId)
		copy(dAtA[i:], m.WebauthnRpId)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.WebauthnRpId)))
		i--
		dAtA[i] = 0x7a
	}
	if m.SendBasicAuthPrompt {
		i--
		if m.SendBasicAuthPrompt {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if m.InsecureAllowFrameLoading {
		i--
		if m.InsecureAllowFrameLoading {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.InsecureSkipHostCheck {
		i--
		if m.InsecureSkipHostCheck {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.Debugging {
		i--
		if m.Debugging {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if len(m.Theme) > 0 {
		i -= len(m.Theme)
		copy(dAtA[i:], m.Theme)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.Theme)))
		i--
		dAtA[i] = 0x52
	}
	if m.InsecureAdminAccess {
		i--
		if m.InsecureAdminAccess {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.APIKey) > 0 {
		i -= len(m.APIKey)
		copy(dAtA[i:], m.APIKey)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.APIKey)))
		i--
		dAtA[i] = 0x42
	}
	if m.RawUseTLS {
		i--
		if m.RawUseTLS {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.AuthMode != 0 {
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(m.AuthMode))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RawUnixSocketPermissions) > 0 {
		i -= len(m.RawUnixSocketPermissions)
		copy(dAtA[i:], m.RawUnixSocketPermissions)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.RawUnixSocketPermissions)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RawAddress) > 0 {
		i -= len(m.RawAddress)
		copy(dAtA[i:], m.RawAddress)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.RawAddress)))
		i--
		dAtA[i] = 0x12
	}
	if m.Enabled {
		i--
		if m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WebauthnCredential) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebauthnCredential) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WebauthnCredential) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequireUv {
		i--
		if m.RequireUv {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Transports) > 0 {
		for iNdEx := len(m.Transports) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Transports[iNdEx])
			copy(dAtA[i:], m.Transports[iNdEx])
			i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.Transports[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.SignCount != 0 {
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(m.SignCount))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PublicKeyCose) > 0 {
		i -= len(m.PublicKeyCose)
		copy(dAtA[i:], m.PublicKeyCose)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.PublicKeyCose)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintGuiconfiguration(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGuiconfiguration(dAtA []byte, offset int, v uint64) int {
	offset -= sovGuiconfiguration(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GUIConfiguration) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled {
		n += 2
	}
	l = len(m.RawAddress)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	l = len(m.RawUnixSocketPermissions)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	if m.AuthMode != 0 {
		n += 1 + sovGuiconfiguration(uint64(m.AuthMode))
	}
	if m.RawUseTLS {
		n += 2
	}
	l = len(m.APIKey)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	if m.InsecureAdminAccess {
		n += 2
	}
	l = len(m.Theme)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	if m.Debugging {
		n += 2
	}
	if m.InsecureSkipHostCheck {
		n += 2
	}
	if m.InsecureAllowFrameLoading {
		n += 2
	}
	if m.SendBasicAuthPrompt {
		n += 2
	}
	l = len(m.WebauthnRpId)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	l = len(m.WebauthnOrigin)
	if l > 0 {
		n += 2 + l + sovGuiconfiguration(uint64(l))
	}
	if len(m.WebauthnCredentials) > 0 {
		for _, e := range m.WebauthnCredentials {
			l = e.ProtoSize()
			n += 2 + l + sovGuiconfiguration(uint64(l))
		}
	}
	return n
}

func (m *WebauthnCredential) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	l = len(m.PublicKeyCose)
	if l > 0 {
		n += 1 + l + sovGuiconfiguration(uint64(l))
	}
	if m.SignCount != 0 {
		n += 1 + sovGuiconfiguration(uint64(m.SignCount))
	}
	if len(m.Transports) > 0 {
		for _, s := range m.Transports {
			l = len(s)
			n += 1 + l + sovGuiconfiguration(uint64(l))
		}
	}
	if m.RequireUv {
		n += 2
	}
	return n
}

func sovGuiconfiguration(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGuiconfiguration(x uint64) (n int) {
	return sovGuiconfiguration(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GUIConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuiconfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GUIConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GUIConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawUnixSocketPermissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawUnixSocketPermissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthMode", wireType)
			}
			m.AuthMode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthMode |= AuthMode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawUseTLS", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RawUseTLS = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureAdminAccess", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InsecureAdminAccess = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Theme = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Debugging", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Debugging = bool(v != 0)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureSkipHostCheck", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InsecureSkipHostCheck = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsecureAllowFrameLoading", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InsecureAllowFrameLoading = bool(v != 0)
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendBasicAuthPrompt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SendBasicAuthPrompt = bool(v != 0)
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebauthnRpId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebauthnRpId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebauthnOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebauthnOrigin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebauthnCredentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebauthnCredentials = append(m.WebauthnCredentials, WebauthnCredential{})
			if err := m.WebauthnCredentials[len(m.WebauthnCredentials)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuiconfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebauthnCredential) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuiconfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebauthnCredential: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebauthnCredential: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKeyCose", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKeyCose = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignCount", wireType)
			}
			m.SignCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SignCount |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Transports", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Transports = append(m.Transports, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequireUv", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RequireUv = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGuiconfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuiconfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGuiconfiguration(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGuiconfiguration
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuiconfiguration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGuiconfiguration
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGuiconfiguration
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGuiconfiguration
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGuiconfiguration        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGuiconfiguration          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGuiconfiguration = fmt.Errorf("proto: unexpected end of group")
)
